//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Administration.DataAccess
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Vlims.Administration.Entities;
    using Vlims.Common;



    // Comment
    public static class PlantManagementConverter
    {
        
        public static List<PlantManagement> SetAllPlantManagement(DataSet dataset)
        {
            try
            {
                List<PlantManagement> result = new List<PlantManagement>();
                PlantManagement plantManagementData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        plantManagementData = new PlantManagement();
                        plantManagementData.PMId = Convert.ToInt16(row[PlantManagementConstants.PMId.Trim('@')]);
                        plantManagementData.AdminManagerId = Convert.ToString(row[PlantManagementConstants.AdminManagerId.Trim('@')]);
                        plantManagementData.PlantName = Convert.ToString(row[PlantManagementConstants.PlantName.Trim('@')]);
                        plantManagementData.PlantCode = Convert.ToString(row[PlantManagementConstants.PlantCode.Trim('@')]);
                        plantManagementData.PlantAddress = Convert.ToString(row[PlantManagementConstants.PlantAddress.Trim('@')]);
                        plantManagementData.Comments = Convert.ToString(row[PlantManagementConstants.Comments.Trim('@')]);
                        plantManagementData.CreatedBy = Convert.ToString(row[PlantManagementConstants.CreatedBy.Trim('@')]);
                        plantManagementData.CreatedDate = DatatypeConverter.SetDateTime(row[PlantManagementConstants.CreatedDate.Trim('@')]);
                        plantManagementData.ModifiedBy = Convert.ToString(row[PlantManagementConstants.ModifiedBy.Trim('@')]);
                        plantManagementData.ModifiedDate = DatatypeConverter.SetDateTime(row[PlantManagementConstants.ModifiedDate.Trim('@')]);
                        //plantManagementData.Status = Convert.ToString(row[PlantManagementConstants.Status.Trim('@')]);
                        result.Add(plantManagementData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static PlantManagement SetPlantManagement(DataSet dataset)
        {
            var result = SetAllPlantManagement(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Administration.DataAccess
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Vlims.Administration.Entities;
    using Vlims.Common;



    // Comment
    public static class AdimManagementConverter
    {
        
        public static List<AdimManagement> SetAllAdimManagement(DataSet dataset)
        {
            try
            {
                List<AdimManagement> result = new List<AdimManagement>();
                AdimManagement adimManagementData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        adimManagementData = new AdimManagement();
                        adimManagementData.AMId = Convert.ToString(row[AdimManagementConstants.AMId.Trim()]);
                        adimManagementData.SecurityManagement = Convert.ToString(row[AdimManagementConstants.SecurityManagement.Trim()]);
                        adimManagementData.HierarchyManagement = Convert.ToString(row[AdimManagementConstants.HierarchyManagement.Trim()]);
                        adimManagementData.PlantManagement = Convert.ToString(row[AdimManagementConstants.PlantManagement.Trim()]);
                        adimManagementData.UserManagement = Convert.ToString(row[AdimManagementConstants.UserManagement.Trim()]);
                        adimManagementData.CreatedBy = Convert.ToString(row[AdimManagementConstants.CreatedBy.Trim()]);
                        adimManagementData.CreatedDate = DatatypeConverter.SetDateTime(row[AdimManagementConstants.CreatedDate.Trim()]);
                        adimManagementData.ModifiedBy = Convert.ToString(row[AdimManagementConstants.ModifiedBy.Trim()]);
                        adimManagementData.ModifiedDate = DatatypeConverter.SetDateTime(row[AdimManagementConstants.ModifiedDate.Trim()]);
                        result.Add(adimManagementData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static AdimManagement SetAdimManagement(DataSet dataset)
        {
            var result = SetAllAdimManagement(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}

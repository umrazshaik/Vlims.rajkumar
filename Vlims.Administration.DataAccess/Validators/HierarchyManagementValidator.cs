//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    using Vlims.Administration.Entities;
    using Vlims.Common;


    // Comment
    public static class HierarchyManagementValidator
    {
        
        public static string IsValidHierarchyManagement(HierarchyManagement hierarchyManagement)
        {
            try
            {
                StringBuilder validationMessages = new StringBuilder();
                ValidationHelper validationHelper = new ValidationHelper();
                validationMessages.Append(validationHelper.NullCheckValidator(hierarchyManagement.HMId, nameof(hierarchyManagement.HMId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.HMId,50, nameof(hierarchyManagement.HMId)));
                validationMessages.Append(validationHelper.NullCheckValidator(hierarchyManagement.AdminManagerId, nameof(hierarchyManagement.AdminManagerId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.AdminManagerId,50, nameof(hierarchyManagement.AdminManagerId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.DepartmentConfiguration,50, nameof(hierarchyManagement.DepartmentConfiguration)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.RoleConfiguration,50, nameof(hierarchyManagement.RoleConfiguration)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.SetFunctionalProfile,50, nameof(hierarchyManagement.SetFunctionalProfile)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.CreatedBy,100, nameof(hierarchyManagement.CreatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(hierarchyManagement.ModifiedBy,100, nameof(hierarchyManagement.ModifiedBy)));
                if (!String.IsNullOrEmpty(validationMessages.ToString()))
                {
                    return Convert.ToString(validationMessages.Remove(validationMessages.ToString().LastIndexOf(','),1));
                }
                else
                {
                    return Convert.ToString(validationMessages);
                }
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}

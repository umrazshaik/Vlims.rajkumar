//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Vlims.Administration.Entities;
    using Vlims.Common;


    // Comment
    public static class PlantManagementValidator
    {
        
        public static string IsValidPlantManagement(PlantManagement plantManagement)
        {
            try
            {
                StringBuilder validationMessages = new StringBuilder();
                ValidationHelper validationHelper = new ValidationHelper();
                //validationMessages.Append(validationHelper.NullCheckValidator(plantManagement.PMId, nameof(plantManagement.PMId)));
                //validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.PMId,50, nameof(plantManagement.PMId)));
                validationMessages.Append(validationHelper.NullCheckValidator(plantManagement.AdminManagerId, nameof(plantManagement.AdminManagerId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.AdminManagerId,50, nameof(plantManagement.AdminManagerId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.PlantName,50, nameof(plantManagement.PlantName)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.PlantCode,50, nameof(plantManagement.PlantCode)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.PlantAddress,50, nameof(plantManagement.PlantAddress)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.Comments,50, nameof(plantManagement.Comments)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.CreatedBy,100, nameof(plantManagement.CreatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plantManagement.ModifiedBy,100, nameof(plantManagement.ModifiedBy)));
                if (!String.IsNullOrEmpty(validationMessages.ToString()))
                {
                    return Convert.ToString(validationMessages.Remove(validationMessages.ToString().LastIndexOf(','),1));
                }
                else
                {
                    return Convert.ToString(validationMessages);
                }
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}

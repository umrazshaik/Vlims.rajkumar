//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Administration.Manager
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Vlims.Common;
    using Vlims.Administration.Entities;
    using Vlims.Administration.DataAccess;



    // Comment
    public class SecurityManagementService : ISecurityManagementService
    {
        
      
        
        public ResponseContext<SecurityManagement> GetAllSecurityManagement(RequestContext requestContext)
        {
            try
            {
                requestContext.PageNumber = 1;
                requestContext.PageSize = 50;
                DataSet dataset = SecurityManagementData.GetAllSecurityManagement(requestContext);
                List<SecurityManagement> result = SecurityManagementConverter.SetAllSecurityManagement(dataset);
                return new ResponseContext<SecurityManagement>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public SecurityManagement GetSecurityManagementBySMId(string sMId)
        {
            try
            {
                DataSet dataset = SecurityManagementData.GetSecurityManagementBySMId(sMId);
                SecurityManagement result = SecurityManagementConverter.SetSecurityManagement(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool SaveSecurityManagement(SecurityManagement securityManagement)
        {
            try
            {
                String validationMessages = SecurityManagementValidator.IsValidSecurityManagement(securityManagement);
                if (validationMessages.Length <= 0)
                {
                    var result = SecurityManagementData.SaveSecurityManagement(securityManagement);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool UpdateSecurityManagement(SecurityManagement securityManagement)
        {
            try
            {
                String validationMessages = SecurityManagementValidator.IsValidSecurityManagement(securityManagement);
                if (validationMessages.Length <= 0)
                {
                    bool result = SecurityManagementData.UpdateSecurityManagement(securityManagement);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteSecurityManagementBySMId(string sMId)
        {
            try
            {
                return SecurityManagementData.DeleteSecurityManagementBySMId(sMId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAllSecurityManagement(List<int> sMIds)
        {
            try
            {
                return SecurityManagementData.DeleteAllSecurityManagement(sMIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}

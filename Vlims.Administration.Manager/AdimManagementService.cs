//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Administration.Manager
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Vlims.Common;
    using Vlims.Administration.DataAccess;
    using Vlims.Administration.Entities;

    //using PolicySummary.Common.Entities;
    //using PolicySummary.Sheet1.Entities;
    //using PolicySummary.Sheet1.Data;


    // Comment
    public class AdimManagementService : IAdimManagementService
    {
        
        
        
        public ResponseContext<AdimManagement> GetAllAdimManagement(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = AdimManagementData.GetAllAdimManagement(requestContext);
                List<AdimManagement> result = AdimManagementConverter.SetAllAdimManagement(dataset);
                return new ResponseContext<AdimManagement>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public AdimManagement GetAdimManagementByAMId(string aMId)
        {
            try
            {
                DataSet dataset = AdimManagementData.GetAdimManagementByAMId(aMId);
                AdimManagement result = AdimManagementConverter.SetAdimManagement(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool SaveAdimManagement(AdimManagement adimManagement)
        {
            try
            {
                String validationMessages = AdimManagementValidator.IsValidAdimManagement(adimManagement);
                if (validationMessages.Length <= 0)
                {
                    var result = AdimManagementData.SaveAdimManagement(adimManagement);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool UpdateAdimManagement(AdimManagement adimManagement)
        {
            try
            {
                String validationMessages = AdimManagementValidator.IsValidAdimManagement(adimManagement);
                if (validationMessages.Length <= 0)
                {
                    bool result = AdimManagementData.UpdateAdimManagement(adimManagement);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAdimManagementByAMId(string aMId)
        {
            try
            {
                return AdimManagementData.DeleteAdimManagementByAMId(aMId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAllAdimManagement(List<int> aMIds)
        {
            try
            {
                return AdimManagementData.DeleteAllAdimManagement(aMIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}

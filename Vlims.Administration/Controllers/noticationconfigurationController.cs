//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Authorization;
    using Vlims.Administration.Manager;
    using Vlims.Common;
    using Vlims.Administration.Entities;


    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/noticationconfiguration")]
    public class noticationconfigurationController : ControllerBase
    {
        
        private readonly InoticationconfigurationService noticationconfigurationService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="noticationconfigurationService"></param>
        public noticationconfigurationController(InoticationconfigurationService noticationconfigurationService)
        {
            this.noticationconfigurationService = noticationconfigurationService;
        }
        
        /// <summary>
        /// This method is used to Get List of noticationconfiguration
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost()]
        public ActionResult<ResponseContext<noticationconfiguration>> GetAllnoticationconfiguration(RequestContext requestContext)
        {
            var result = noticationconfigurationService.GetAllnoticationconfiguration(requestContext);
            return result;
        }
        
        /// <summary>
        /// This method is used to Get noticationconfiguration By Id nCId
        /// </summary>
        /// <param name="nCId"></param>
        [HttpGet("{nCId}")]
        public ActionResult<noticationconfiguration> GetnoticationconfigurationByNCId(int nCId)
        {
            var result = noticationconfigurationService.GetnoticationconfigurationByNCId(nCId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Save noticationconfiguration
        /// </summary>
        /// <param name="noticationconfiguration"></param>
        [HttpPost("savenoticationconfiguration")]
        public ActionResult<System.Boolean> Savenoticationconfiguration(noticationconfiguration noticationconfiguration)
        {
            var result = noticationconfigurationService.Savenoticationconfiguration(noticationconfiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update noticationconfiguration
        /// </summary>
        /// <param name="noticationconfiguration"></param>
        [HttpPost("updatenoticationconfiguration")]
        public ActionResult<System.Boolean> Updatenoticationconfiguration(noticationconfiguration noticationconfiguration)
        {
            var result = noticationconfigurationService.Updatenoticationconfiguration(noticationconfiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete noticationconfiguration By Id nCId
        /// </summary>
        /// <param name="nCId"></param>
        [HttpDelete("{nCId}")]
        public ActionResult<bool> DeletenoticationconfigurationByNCId(int nCId)
        {
            var result = noticationconfigurationService.DeletenoticationconfigurationByNCId(nCId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete noticationconfiguration By Multiple ids nCIds
        /// </summary>
        /// <param name="nCIds"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllnoticationconfiguration(List<int> nCIds)
        {
            var result = noticationconfigurationService.DeleteAllnoticationconfiguration(nCIds);
            return result;
        }
    }
}

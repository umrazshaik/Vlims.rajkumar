//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PolicySummary.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Authorization;
    using Vlims.Administration.Manager;
    using Vlims.Common;
    using Vlims.Administration.Entities;


    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/roleconfiguration")]
    public class RoleConfigurationController : ControllerBase
    {
        
        private readonly IRoleConfigurationService roleConfigurationService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="roleConfigurationService"></param>
        public RoleConfigurationController(IRoleConfigurationService roleConfigurationService)
        {
            this.roleConfigurationService = roleConfigurationService;
        }
        
        /// <summary>
        /// This method is used to Get List of RoleConfiguration
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost("getroles")]
        public ActionResult<ResponseContext<RoleConfiguration>> GetAllRoleConfiguration(RequestContext requestContext)
        {
            var result = roleConfigurationService.GetAllRoleConfiguration(requestContext);
            return result;
        }
        
        /// <summary>
        /// This method is used to Get RoleConfiguration By Id rOCFId
        /// </summary>
        /// <param name="rOCFId"></param>
        [HttpGet("{rOCFId}")]
        public ActionResult<RoleConfiguration> GetRoleConfigurationByROCFId(string rOCFId)
        {
            var result = roleConfigurationService.GetRoleConfigurationByROCFId(rOCFId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Save RoleConfiguration
        /// </summary>
        /// <param name="roleConfiguration"></param>
        [HttpPost("saveroleconfiguration")]
        public ActionResult<System.Boolean> SaveRoleConfiguration(RoleConfiguration roleConfiguration)
        {
            var result = roleConfigurationService.SaveRoleConfiguration(roleConfiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update RoleConfiguration
        /// </summary>
        /// <param name="roleConfiguration"></param>
        [HttpPost("updateroleconfiguration")]
        public ActionResult<System.Boolean> UpdateRoleConfiguration(RoleConfiguration roleConfiguration)
        {
            var result = roleConfigurationService.UpdateRoleConfiguration(roleConfiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete RoleConfiguration By Id rOCFId
        /// </summary>
        /// <param name="rOCFId"></param>
        [HttpDelete("{rOCFId}")]
        public ActionResult<bool> DeleteRoleConfigurationByROCFId(string rOCFId)
        {
            var result = roleConfigurationService.DeleteRoleConfigurationByROCFId(rOCFId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete RoleConfiguration By Multiple ids rOCFIds
        /// </summary>
        /// <param name="rOCFIds"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllRoleConfiguration(List<int> rOCFIds)
        {
            var result = roleConfigurationService.DeleteAllRoleConfiguration(rOCFIds);
            return result;
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="hMId"></param>
        [HttpGet("getRoleConfigurationByHierarchyManagementId/{hMId}")]
        public ActionResult<List<RoleConfiguration>> GetRoleConfigurationByHierarchyManagementId(System.Int32? hMId)
        {
            var result = roleConfigurationService.GetRoleConfigurationByHierarchyManagementId(hMId);
            return result;
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="hMId"></param>
        [HttpDelete("deleteRoleConfigurationByHierarchyManagementId/{hMId}")]
        public ActionResult<bool> DeleteRoleConfigurationByHierarchyManagementId(System.Int32? hMId)
        {
            var result = roleConfigurationService.DeleteRoleConfigurationByHierarchyManagementId(hMId);
            return result;
        }
        /// <summary>
        /// This method is used to Get DocumentTypeConfiguration By Id dTCId
        /// </summary>
        /// <param name="dTCId"></param>
        [HttpGet("getbyId")]
        public ActionResult<RoleConfiguration> GetRoleConfigurationbyId(int roleId)
        {
            var result = roleConfigurationService.GetRoleConfigurationByROCFId(roleId.ToString());
            return result;
        }
    }
}

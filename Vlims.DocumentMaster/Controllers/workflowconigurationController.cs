//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vlims.Controllers
{
    using System.Collections.Generic;
    using Microsoft.AspNetCore.Mvc;
    using Vlims.Common;
    using Vlims.DocumentMaster.Entities;
    using Vlims.DocumentMaster.Manager;

    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/workflowconiguration")]
    public class workflowconigurationController : ControllerBase
    {
        
        private readonly IworkflowconigurationService workflowconigurationService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="workflowconigurationService"></param>
        public workflowconigurationController(IworkflowconigurationService workflowconigurationService)
        {
            this.workflowconigurationService = workflowconigurationService;
        }
        
        /// <summary>
        /// This method is used to Get List of workflowconiguration
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost("getallworkflow")]
        public ActionResult GetAllworkflowconiguration([FromQuery] RequestContext requestContext)
        {
            var result = workflowconigurationService.GetAllworkflowconiguration(requestContext);
            return Ok(result);
        }
        
        /// <summary>
        /// This method is used to Get workflowconiguration By Id wFCId
        /// </summary>
        /// <param name="wFCId"></param>
        [HttpGet("getbyId")]
        public ActionResult<workflowconiguration> GetworkflowconigurationByWFCId(int wFCId)
        {
            var result = workflowconigurationService.GetworkflowconigurationByWFCId(wFCId);
            return result;
        }
        /// <summary>
        /// This method is used to Get workflowconiguration By Name
        /// </summary>
        /// <param name="name"></param>
        /// <returns></returns>
        [HttpGet("getbyName")]
        public ActionResult GetworkflowconigurationByName(string name)
        {
            workflowconiguration responseContext = new workflowconiguration();
            RequestContext requestContext = new RequestContext();
            requestContext.PageNumber = 1;
            requestContext.PageSize = 50;
            var result = workflowconigurationService.GetAllworkflowconiguration(requestContext);
            if (result != null)
            {
                responseContext = result.Response.FirstOrDefault(o => o.workflowName.Equals(name, StringComparison.InvariantCultureIgnoreCase));
            }
            return Ok(responseContext);
        }
        /// <summary>
        /// This Method is used to Save workflowconiguration
        /// </summary>
        /// <param name="workflowconiguration"></param>
        [HttpPost("saveworkflowconiguration")]
        public ActionResult<System.Boolean> Saveworkflowconiguration(workflowconiguration workflowconiguration)
        {
            var result = workflowconigurationService.Saveworkflowconiguration(workflowconiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update workflowconiguration
        /// </summary>
        /// <param name="workflowconiguration"></param>
        [HttpPost("updateworkflowconiguration")]
        public ActionResult<System.Boolean> Updateworkflowconiguration(workflowconiguration workflowconiguration)
        {
            var result = workflowconigurationService.Updateworkflowconiguration(workflowconiguration);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete workflowconiguration By Id wFCId
        /// </summary>
        /// <param name="wFCId"></param>
        [HttpDelete("{wFCId}")]
        public ActionResult<bool> DeleteworkflowconigurationByWFCId(int wFCId)
        {
            var result = workflowconigurationService.DeleteworkflowconigurationByWFCId(wFCId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete workflowconiguration By Multiple ids wFCIds
        /// </summary>
        /// <param name="wFCIds"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllworkflowconiguration(List<int> wFCIds)
        {
            var result = workflowconigurationService.DeleteAllworkflowconiguration(wFCIds);
            return result;
        }
    }
}

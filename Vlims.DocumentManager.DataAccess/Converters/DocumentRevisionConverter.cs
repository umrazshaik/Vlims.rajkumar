//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
using Vlims.Common;



// Comment
public static class DocumentRevisionConverter
    {
        
        public static List<AdditionalTask> SetAllDocumentRevision(DataSet dataset)
        {
            try
            {
                List<AdditionalTask> result = new List<AdditionalTask>();
                AdditionalTask documentRevisionData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        documentRevisionData = new AdditionalTask();
                        documentRevisionData.DRId = Convert.ToString(row[DocumentRevisionConstants.DRId.Trim()]);
                        documentRevisionData.Documentmanagerid = Convert.ToString(row[DocumentRevisionConstants.Documentmanagerid.Trim()]);
                        documentRevisionData.requestcode = Convert.ToString(row[DocumentRevisionConstants.requestcode.Trim()]);
                        documentRevisionData.documenttitle = Convert.ToString(row[DocumentRevisionConstants.documenttitle.Trim()]);
                        documentRevisionData.documentno = Convert.ToString(row[DocumentRevisionConstants.documentno.Trim()]);
                        documentRevisionData.documenttype = Convert.ToString(row[DocumentRevisionConstants.documenttype.Trim()]);
                        documentRevisionData.department = Convert.ToString(row[DocumentRevisionConstants.department.Trim()]);
                        documentRevisionData.document = Convert.ToString(row[DocumentRevisionConstants.document.Trim()]);
                        documentRevisionData.EffectiveDate = Convert.ToDateTime(row[DocumentRevisionConstants.EffectiveDate.Trim()]);
                        documentRevisionData.Reviewdate = Convert.ToDateTime(row[DocumentRevisionConstants.Reviewdate.Trim()]);
                        documentRevisionData.Status = Convert.ToString(row[DocumentRevisionConstants.Status.Trim()]);
                        documentRevisionData.Version = Convert.ToString(row[DocumentRevisionConstants.Version.Trim()]);
                        documentRevisionData.CreatedBy = Convert.ToString(row[DocumentRevisionConstants.CreatedBy.Trim()]);
                        documentRevisionData.CreatedDate = DatatypeConverter.SetDateTime(row[DocumentRevisionConstants.CreatedDate.Trim()]);
                        documentRevisionData.ModifiedBy = Convert.ToString(row[DocumentRevisionConstants.ModifiedBy.Trim()]);
                        documentRevisionData.ModifiedDate = DatatypeConverter.SetDateTime(row[DocumentRevisionConstants.ModifiedDate.Trim()]);
                        result.Add(documentRevisionData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static AdditionalTask SetDocumentRevision(DataSet dataset)
        {
            var result = SetAllDocumentRevision(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }

